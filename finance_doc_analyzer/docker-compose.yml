services:
  proxy:
    image: traefik:v3.2
    networks:
      - traefik-public
      - default
    ports:
      - "80:80"
      - "8090:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --accesslog
      - --log
      - --api
      - --api.insecure=true
      - --entrypoints.web.address=:80

  worker: 
    build: 
      context: ./ai_service
      dockerfile: Dockerfile.fastapi
    command: celery -A celery_app.celery_app worker -l info
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - backend
      - fastapi

  db:
    image: mongo:7
    container_name: mongodb
    volumes:
      - app-db-data:/data/db
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB:-mydb}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-mongodbadmin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password}
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - default

  fastapi:
    build:
      context: ./ai_service
      dockerfile: Dockerfile.fastapi
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      REDIS_URL: redis://redis:6379/0

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      fastapi:
        condition: service_started
    env_file:
      - .env
    ports:
      - "5050:5050"
    environment:
      MONGO_URI: ${MONGO_URI}
      MONGO_USER: ${MONGO_USER:-mongodbadmin}
      MONGO_PASSWORD: ${MONGO_PASSWORD:-password}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    command: ["node", "server.js"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.development
    env_file:
      - .env
    ports:
      - "5173:5173"
    command: npm run dev -- --host

volumes:
  app-db-data:

networks:
  traefik-public:
    external: false
